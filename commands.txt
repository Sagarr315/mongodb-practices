

DAY 1

1.create the DB of the name first_db  :

             use first_db

2. Create the collection :   

             db.createCollection("students")

3.Insert documents into students collection
              
	     db.students.insertOne({ name: "ramu",age: 18})

4.nested document 
             db.students.updateOne({name:"Dhoni"} , {$set:{play{cricket:true,football:true}  }})

5.Update all documents with array drink: ["tea", "coffee"]
             
             1)db.students.updateMany( {}, { $set: { drink: ["tea", "coffee"] } }  )
 
             2)db.students.find({drink:"tea"}).count()

                    using the 2)command the count() give the actual count 


6.Query for the finding nested documents 
             
                db.students.find({"play.cricket":true}) 


DAY 2
CRUD OPERATIONS (READ) USING FIND() AND FINDONE()

1.using the find() to search the record
	first_db>  db.students.find({name:"tom"})
	[ { _id: ObjectId('67f3c72acc6bb3139bb71239'), name: 'tom', age: 12 } ]

2.using the findOne()
	first_db> db.students.findOne({name:"tom"})
	{ _id: ObjectId('67f3c72acc6bb3139bb71239'), name: 'tom', age: 12 }






3.FIND() WITH THE CONDITIONS ONLY SHOW RECORDS WITH AGE GREATERTHAN 16 AND =16 ALSO FOR THE LESSTHAN AND BETWEEN SPECIFIC AGE LIMIT


	first_db> db.students.find({age:{$gt:16}})
[
  { _id: ObjectId('67f3c701cc6bb3139bb71236'), name: 'ramu', age: 18 },
  { _id: ObjectId('67f3c70ecc6bb3139bb71237'), name: 'sham', age: 19 },
  { _id: ObjectId('67f3c732cc6bb3139bb7123a'), name: 'jeery', age: 18 },
  { _id: ObjectId('67f3c76acc6bb3139bb7123d'), name: 'kane', age: 17 }
]

	first_db> db.students.find({age:{$gte:16}})
[
  { _id: ObjectId('67f3c701cc6bb3139bb71236'), name: 'ramu', age: 18 },
  { _id: ObjectId('67f3c70ecc6bb3139bb71237'), name: 'sham', age: 19 },
  { _id: ObjectId('67f3c732cc6bb3139bb7123a'), name: 'jeery', age: 18 },
  { _id: ObjectId('67f3c74acc6bb3139bb7123b'), name: 'jaddu', age: 16 },
  { _id: ObjectId('67f3c756cc6bb3139bb7123c'), name: 'virat', age: 16 },
  { _id: ObjectId('67f3c76acc6bb3139bb7123d'), name: 'kane', age: 17 }
]


	first_db> db.students.find({age:{$gt:16,$lt:18}})
[
  { _id: ObjectId('67f3c76acc6bb3139bb7123d'), name: 'kane', age: 17 }
]
	
	
	first_db> db.students.find({age:{$gte:16,$lte:18}})
[
  { _id: ObjectId('67f3c701cc6bb3139bb71236'), name: 'ramu', age: 18 },
  { _id: ObjectId('67f3c732cc6bb3139bb7123a'), name: 'jeery', age: 18 },
  { _id: ObjectId('67f3c74acc6bb3139bb7123b'), name: 'jaddu', age: 16 },
  { _id: ObjectId('67f3c756cc6bb3139bb7123c'), name: 'virat', age: 16 },
  { _id: ObjectId('67f3c76acc6bb3139bb7123d'), name: 'kane', age: 17 }
]

	
	first_db> db.students.find({age:{$gt:16,$lte:18}})
[
  { _id: ObjectId('67f3c701cc6bb3139bb71236'), name: 'ramu', age: 18 },
  { _id: ObjectId('67f3c732cc6bb3139bb7123a'), name: 'jeery', age: 18 },
  { _id: ObjectId('67f3c76acc6bb3139bb7123d'), name: 'kane', age: 17 }
]


using the id also can fetch the data or record 
		first_db> db.students.find({_id: ObjectId('67f3c756cc6bb3139bb7123c')})
	[
 	 { _id: ObjectId('67f3c756cc6bb3139bb7123c'), name: 'virat', age: 16 }
	]


*CREATE USING THE INSERTONE() AND INSERTMANY()


	first_db> db.students.insertOne({ name: "sham",age: 19})
{
  acknowledged: true,
  insertedId: ObjectId('67f3d15bcc6bb3139bb7123e')
}
	
	first_db> db.students.insertMany([{ name: "abhi",age: 19},{"name":"abhishek",age:20}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('67f3d1e2cc6bb3139bb7123f'),
    '1': ObjectId('67f3d1e2cc6bb3139bb71240')
  }
}






DAY 3
CRUD OPERATIONS FOR UPDATE 

first_db> db.students.find()
[
  { _id: ObjectId('67f3c701cc6bb3139bb71236'), name: 'ramu', age: 18 },
  { _id: ObjectId('67f3c70ecc6bb3139bb71237'), name: 'sham', age: 19 },
  { _id: ObjectId('67f3c717cc6bb3139bb71238'), name: 'ram', age: 15 },
  { _id: ObjectId('67f3c72acc6bb3139bb71239'), name: 'tom', age: 12 },
  { _id: ObjectId('67f3c732cc6bb3139bb7123a'), name: 'jeery', age: 18 },
  { _id: ObjectId('67f3c74acc6bb3139bb7123b'), name: 'jaddu', age: 16 },
  { _id: ObjectId('67f3c756cc6bb3139bb7123c'), name: 'virat', age: 16 },
  { _id: ObjectId('67f3c76acc6bb3139bb7123d'), name: 'kane', age: 17 },
  { _id: ObjectId('67f3d15bcc6bb3139bb7123e'), name: 'sham', age: 19 },
  { _id: ObjectId('67f3d1e2cc6bb3139bb7123f'), name: 'abhi', age: 19 },
  {
    _id: ObjectId('67f3d1e2cc6bb3139bb71240'),
    name: 'abhishek',
    age: 20
  }
]
		first_db> db.students.updateOne({name:"ram"},{$set:{age:14}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}




first_db> db.studens.updateMany({age:16},{$set:{age:20}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}



**updatemany with the condition**

first_db> db.students.updateMany({age:{$lte:18}},{$set:{iseligible:"flase"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 7,
  modifiedCount: 7,
  upsertedCount: 0
}
first_db> db.students.find()
[
  {
    _id: ObjectId('67f3c701cc6bb3139bb71236'),
    name: 'ramu',
    age: 18,
    iseligible: 'flase'
  },
  { _id: ObjectId('67f3c70ecc6bb3139bb71237'), name: 'sham', age: 19 },
  {
    _id: ObjectId('67f3c717cc6bb3139bb71238'),
    name: 'ram',
    age: 14,
    iseligible: 'flase'
  },
  {
    _id: ObjectId('67f3c72acc6bb3139bb71239'),
    name: 'tom',
    age: 12,
    iseligible: 'flase'
  },
  {
    _id: ObjectId('67f3c732cc6bb3139bb7123a'),
    name: 'jeery',
    age: 18,
    iseligible: 'flase'
  },
  {
    _id: ObjectId('67f3c74acc6bb3139bb7123b'),
    name: 'jaddu',
    age: 16,
    iseligible: 'flase'
  },
  {
    _id: ObjectId('67f3c756cc6bb3139bb7123c'),
    name: 'virat',
    age: 16,
    iseligible: 'flase'
  },
  {
    _id: ObjectId('67f3c76acc6bb3139bb7123d'),
    name: 'kane',
    age: 17,
    iseligible: 'flase'
  },
  { _id: ObjectId('67f3d15bcc6bb3139bb7123e'), name: 'sham', age: 19 },
  { _id: ObjectId('67f3d1e2cc6bb3139bb7123f'), name: 'abhi', age: 19 },
  {
    _id: ObjectId('67f3d1e2cc6bb3139bb71240'),
    name: 'abhishek',
    age: 20
  }
]



**deleteOne() and deleteMany()

first_db> db.students.deleteOne({age:16})
{ acknowledged: true, deletedCount: 1 }


first_db>  db.students.deleteMany({age:18})
{ acknowledged: true, deletedCount: 3 }


first_db>  db.students.deleteMany({})
{ acknowledged: true, deletedCount: 7 }








DAY 4    ***select column query

***select query

first_db> db.students.find()
[
  {
    _id: ObjectId('67f8b5927921a1adbfb71236'),
    name: 'abhishek',
    age: 19
  },
  { _id: ObjectId('67f8b5927921a1adbfb71237'), name: 'rahul', age: 15 },
  { _id: ObjectId('67f8b5927921a1adbfb71238'), name: 'rohit', age: 18 },
  { _id: ObjectId('67f8b5927921a1adbfb71239'), name: 'virat', age: 16 },
  { _id: ObjectId('67f8b5927921a1adbfb7123a'), name: 'dhoni', age: 18 },
  { _id: ObjectId('67f8b5927921a1adbfb7123b'), name: 'abhi', age: 20 },
  { _id: ObjectId('67f8b5927921a1adbfb7123c'), name: 'shamu', age: 21 },
  { _id: ObjectId('67f8b5927921a1adbfb7123d'), name: 'ram', age: 22 },
  { _id: ObjectId('67f8b5927921a1adbfb7123e'), name: 'sham', age: 20 }
]

****show the all record with the name and by id default
first_db> db.students.find({},{name:1})
[
  { _id: ObjectId('67f8b5927921a1adbfb71236'), name: 'abhishek' },
  { _id: ObjectId('67f8b5927921a1adbfb71237'), name: 'rahul' },
  { _id: ObjectId('67f8b5927921a1adbfb71238'), name: 'rohit' },
  { _id: ObjectId('67f8b5927921a1adbfb71239'), name: 'virat' },
  { _id: ObjectId('67f8b5927921a1adbfb7123a'), name: 'dhoni' },
  { _id: ObjectId('67f8b5927921a1adbfb7123b'), name: 'abhi' },
  { _id: ObjectId('67f8b5927921a1adbfb7123c'), name: 'shamu' },
  { _id: ObjectId('67f8b5927921a1adbfb7123d'), name: 'ram' },
  { _id: ObjectId('67f8b5927921a1adbfb7123e'), name: 'sham' }
]

****show the all record with the name only 
first_db> db.students.find({},{name:1 , _id:0})
[
  { name: 'abhishek' },
  { name: 'rahul' },
  { name: 'rohit' },
  { name: 'virat' },
  { name: 'dhoni' },
  { name: 'abhi' },
  { name: 'shamu' },
  { name: 'ram' },
  { name: 'sham' }
]




DAY 5

**CREATED NEW DB NAME AMAZON AND IN THAT COLLECTION OF COMPANYDATA INSIDE IT WITH ONE DOCUMENT****

amazon> db.companyData.insertOne({name:"amazon",funded:true,fundingamount:89376542345,employee:[{name:"ram",age:25},{name:"sham",age:35}],foundtimestamp: new Timestamp(),fondedON:new Date() })
{
  acknowledged: true,
  insertedId: ObjectId('67f8d0077921a1adbfb7123f')
}



amazon> db.companyData.find()
[
  {
    _id: ObjectId('67f8d0077921a1adbfb7123f'),
    name: 'amazon',
    funded: true,
    fundingamount: 89376542345,
    employee: [ { name: 'ram', age: 25 }, { name: 'sham', age: 35 } ],
    foundtimestamp: Timestamp({ t: 1744359431, i: 1 }),
    fondedON: ISODate('2025-04-11T08:17:11.826Z')
  }
]

TO KNOW THE DATATYPES USE OF THE ****typeof****** 

amazon>  typeof db.companyData.findOne().fondedON
object
amazon>  typeof db.companyData.findOne().foundtimestamp
object
amazon>  typeof db.companyData.findOne().employee
object
amazon>  typeof db.companyData.findOne().fundingamount
number
amazon>  typeof db.companyData.findOne().name
string
amazon>  typeof db.companyData.findOne().funded
Boolean



DAY 6

**** COMMANDS FOR ALL OPTION FOR THE WRITE CONCERNS INCLUDE({W,J,WTIMEOUT})***


*ONLY WITHW:0
product> db.books.insertOne({name:"b",price:400},{writeConcern:{w:0}})
{
  acknowledged: false,
  insertedId: ObjectId('67fa645ebc824e67aeb71238')
}

**WITH W:0 AND J:FALSE**
product> db.books.insertOne({name:"c",price:500},{writeConcern:{w:0,j:false}})
{
  acknowledged: false,
  insertedId: ObjectId('67fa6482bc824e67aeb71239')
}


product> db.books.find()
[
  { _id: ObjectId('67fa6384bc824e67aeb71237'), name: 'a', price: 300 },
  { _id: ObjectId('67fa645ebc824e67aeb71238'), name: 'b', price: 400 },
  { _id: ObjectId('67fa6482bc824e67aeb71239'), name: 'c', price: 500 }
]


***WITH W:0  ,J:FALSE , WTIMEOUT:5000**
product> db.books.insertOne({name:"e",price:700},{writeConcern:{w:0,j:true,wtimeout: 5000}})
{
  acknowledged: false,
  insertedId: ObjectId('67fa658ebc824e67aeb7123b')
}



****comparision operator**** 

first_db> db.students.find({age:{$eq:18}})
[
  { _id: ObjectId('67f8b5927921a1adbfb71238'), name: 'rohit', age: 18 },
  { _id: ObjectId('67f8b5927921a1adbfb7123a'), name: 'dhoni', age: 18 }
]



first_db>  db.students.find({age:{$ne:18}})
[
  {
    _id: ObjectId('67f8b5927921a1adbfb71236'),
    name: 'abhishek',
    age: 19
  },
  { _id: ObjectId('67f8b5927921a1adbfb71237'), name: 'rahul', age: 15 },
  { _id: ObjectId('67f8b5927921a1adbfb71239'), name: 'virat', age: 16 },
  { _id: ObjectId('67f8b5927921a1adbfb7123b'), name: 'abhi', age: 20 },
  { _id: ObjectId('67f8b5927921a1adbfb7123c'), name: 'shamu', age: 21 },
  { _id: ObjectId('67f8b5927921a1adbfb7123d'), name: 'ram', age: 22 },
  { _id: ObjectId('67f8b5927921a1adbfb7123e'), name: 'sham', age: 20 }
]



first_db> db.students.find({age:{$in:[20,21]}})
[
  { _id: ObjectId('67f8b5927921a1adbfb7123b'), name: 'abhi', age: 20 },
  { _id: ObjectId('67f8b5927921a1adbfb7123c'), name: 'shamu', age: 21 },
  { _id: ObjectId('67f8b5927921a1adbfb7123e'), name: 'sham', age: 20 }
]


first_db>  db.students.find({age:{$nin:[20,21]}})
[
  {
    _id: ObjectId('67f8b5927921a1adbfb71236'),
    name: 'abhishek',
    age: 19
  },
  { _id: ObjectId('67f8b5927921a1adbfb71237'), name: 'rahul', age: 15 },
  { _id: ObjectId('67f8b5927921a1adbfb71238'), name: 'rohit', age: 18 },
  { _id: ObjectId('67f8b5927921a1adbfb71239'), name: 'virat', age: 16 },
  { _id: ObjectId('67f8b5927921a1adbfb7123a'), name: 'dhoni', age: 18 },
  { _id: ObjectId('67f8b5927921a1adbfb7123d'), name: 'ram', age: 22 }
]




******LOGICAL OPERATOR ($and $or  $not $nor)********

********using $or*********
first_db> db.students.find({$or:[ {age:{$lte:21}},{age:{$gte:18}} ]})
[
  {
    _id: ObjectId('67f8b5927921a1adbfb71236'),
    name: 'abhishek',
    age: 19
  },
  { _id: ObjectId('67f8b5927921a1adbfb71237'), name: 'rahul', age: 15 },
  {
    _id: ObjectId('67f8b5927921a1adbfb71238'),
    name: 'rohit',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  { _id: ObjectId('67f8b5927921a1adbfb71239'), name: 'virat', age: 16 },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123a'),
    name: 'dhoni',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123b'),
    name: 'abhi',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  },
  { _id: ObjectId('67f8b5927921a1adbfb7123c'), name: 'shamu', age: 21 },
  { _id: ObjectId('67f8b5927921a1adbfb7123d'), name: 'ram', age: 22 },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123e'),
    name: 'sham',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  }
]

********using $nor*********
 db.students.find({$nor:[ {age:{$lte:17}},{age:{$gte:21}} ]})
[
  {
    _id: ObjectId('67f8b5927921a1adbfb71236'),
    name: 'abhishek',
    age: 19
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb71238'),
    name: 'rohit',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123a'),
    name: 'dhoni',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123b'),
    name: 'abhi',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123e'),
    name: 'sham',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  }
]



********using $and**********8
first_db> db.students.find({$and:[ {age:{$lt:22}}, {hobbies:"Running"} ]})
[
  {
    _id: ObjectId('67f8b5927921a1adbfb7123b'),
    name: 'abhi',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123e'),
    name: 'sham',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  }
]


************using $not*************

first_db> db.students.find({age:{$not:{$gte:20}}})
[
  {
    _id: ObjectId('67f8b5927921a1adbfb71236'),
    name: 'abhishek',
    age: 19
  },
  { _id: ObjectId('67f8b5927921a1adbfb71237'), name: 'rahul', age: 15 },
  {
    _id: ObjectId('67f8b5927921a1adbfb71238'),
    name: 'rohit',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  { _id: ObjectId('67f8b5927921a1adbfb71239'), name: 'virat', age: 16 },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123a'),
    name: 'dhoni',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  }
]







first_db> db.students.find({hobbies:{$exists:true}})
[
  {
    _id: ObjectId('67f8b5927921a1adbfb71238'),
    name: 'rohit',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123a'),
    name: 'dhoni',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123b'),
    name: 'abhi',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123e'),
    name: 'sham',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  }
]






first_db> db.students.find({hobbies:{$exists:true ,$type:"array"}})
[
  {
    _id: ObjectId('67f8b5927921a1adbfb71238'),
    name: 'rohit',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123a'),
    name: 'dhoni',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123b'),
    name: 'abhi',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123e'),
    name: 'sham',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  }
]





first_db> db.students.find({hobbies:{$type:"array"}})
[
  {
    _id: ObjectId('67f8b5927921a1adbfb71238'),
    name: 'rohit',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123a'),
    name: 'dhoni',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123b'),
    name: 'abhi',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123e'),
    name: 'sham',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  }
]




first_db> db.students.find({ $expr: { $eq: ["$age", 20] }})
[
  {
    _id: ObjectId('67f8b5927921a1adbfb7123b'),
    name: 'abhi',
    age: 20,
    hobbies: [ 'Running', 'reading' ],
    experiences: [
      { company: 'amazon', duration: 3 },
      { company: 'google', duration: 2 }
    ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123e'),
    name: 'sham',
    age: 20,
    hobbies: [ 'Running', 'reading' ],
    experiences: [
      { company: 'amazon', duration: 3 },
      { company: 'google', duration: 2 }
    ]
  }
]


first_db> db.students.find({name: {$regex:/^r/}})
[
  { _id: ObjectId('67f8b5927921a1adbfb71237'), name: 'rahul', age: 15 },
  {
    _id: ObjectId('67f8b5927921a1adbfb71238'),
    name: 'rohit',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  { _id: ObjectId('67f8b5927921a1adbfb7123d'), name: 'ram', age: 22 }
]


first_db> db.students.find({name: {$regex:/^/i}})
[
  {
    _id: ObjectId('67f8b5927921a1adbfb71236'),
    name: 'abhishek',
    age: 19
  },
  { _id: ObjectId('67f8b5927921a1adbfb71237'), name: 'rahul', age: 15 },
  {
    _id: ObjectId('67f8b5927921a1adbfb71238'),
    name: 'rohit',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  { _id: ObjectId('67f8b5927921a1adbfb71239'), name: 'virat', age: 16 },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123a'),
    name: 'dhoni',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123b'),
    name: 'abhi',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  },
  { _id: ObjectId('67f8b5927921a1adbfb7123c'), name: 'shamu', age: 21 },
  { _id: ObjectId('67f8b5927921a1adbfb7123d'), name: 'ram', age: 22 },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123e'),
    name: 'sham',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  }
]





first_db> db.students.createIndex({hobbies:"text"})
hobbies_text
first_db> db.students.find({$text:{$search:"reading"}})
[
  {
    _id: ObjectId('67f8b5927921a1adbfb7123e'),
    name: 'sham',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123b'),
    name: 'abhi',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  }
]




first_db> db.students.find({age:{$mod:[2,0]}})
[
  {
    _id: ObjectId('67f8b5927921a1adbfb71238'),
    name: 'rohit',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  { _id: ObjectId('67f8b5927921a1adbfb71239'), name: 'virat', age: 16 },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123a'),
    name: 'dhoni',
    age: 18,
    hobbies: [ 'walk', 'cooking' ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123b'),
    name: 'abhi',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  },
  { _id: ObjectId('67f8b5927921a1adbfb7123d'), name: 'ram', age: 22 },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123e'),
    name: 'sham',
    age: 20,
    hobbies: [ 'Running', 'reading' ]
  }
]





From Beginner to Pro: Querying Arrays in MongoDB 
**********using $size ,$all  ,$in  ,$elemMatch*************



first_db> db.students.find({ "experiences.company":"amazon"})
[
  {
    _id: ObjectId('67f8b5927921a1adbfb7123b'),
    name: 'abhi',
    age: 20,
    hobbies: [ 'Running', 'reading' ],
    experiences: [
      { company: 'amazon', duration: 3 },
      { company: 'google', duration: 2 }
    ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123e'),
    name: 'sham',
    age: 20,
    hobbies: [ 'Running', 'reading' ],
    experiences: [
      { company: 'amazon', duration: 3 },
      { company: 'google', duration: 2 }
    ]
  }
]


first_db> db.students.find({ "experiences.company":"nvidia"}).size()
1
first_db> db.students.find({ "experiences.company":"google"}).size()
2




first_db> db.students.find({ experiences:{$size:2}})
[
  {
    _id: ObjectId('67f8b5927921a1adbfb7123b'),
    name: 'abhi',
    age: 20,
    hobbies: [ 'Running', 'reading' ],
    experiences: [
      { company: 'amazon', duration: 3 },
      { company: 'google', duration: 2 }
    ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123d'),
    name: 'ram',
    age: 22,
    experiences: [
      { company: 'openai', duration: 3 },
      { company: 'nvidia', duration: 2 }
    ]
  },
  {
    _id: ObjectId('67f8b5927921a1adbfb7123e'),
    name: 'sham',
    age: 20,
    hobbies: [ 'Running', 'reading' ],
    experiences: [
      { company: 'amazon', duration: 3 },
      { company: 'google', duration: 2 }
    ]
  }
]